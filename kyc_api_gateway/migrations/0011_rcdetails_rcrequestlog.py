# Generated by Django 5.2.6 on 2025-10-08 10:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("kyc_api_gateway", "0010_voterdetail_voterrequestlog"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RCDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.CharField(blank=True, max_length=100, null=True)),
                ("client_id", models.CharField(blank=True, max_length=100, null=True)),
                ("rc_number", models.CharField(db_index=True, max_length=30)),
                ("owner_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "father_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("present_address", models.TextField(blank=True, null=True)),
                ("permanent_address", models.TextField(blank=True, null=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "maker_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "maker_model",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("body_type", models.CharField(blank=True, max_length=100, null=True)),
                ("fuel_type", models.CharField(blank=True, max_length=100, null=True)),
                ("color", models.CharField(blank=True, max_length=50, null=True)),
                ("norms_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vehicle_category",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicle_category_description",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "vehicle_chasi_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicle_engine_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "manufacturing_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "manufacturing_date_formatted",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "registration_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "registered_at",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "insurance_company",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "insurance_policy_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "insurance_upto",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("fit_upto", models.CharField(blank=True, max_length=20, null=True)),
                ("tax_upto", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "cubic_capacity",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "vehicle_gross_weight",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "unladen_weight",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "seat_capacity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "sleeper_capacity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "standing_capacity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("wheelbase", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "no_cylinders",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("financer", models.CharField(blank=True, max_length=255, null=True)),
                ("financed", models.BooleanField(null=True)),
                ("rc_status", models.CharField(blank=True, max_length=50, null=True)),
                ("latest_by", models.CharField(blank=True, max_length=50, null=True)),
                ("less_info", models.BooleanField(null=True)),
                ("full_response", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "kyc_rc_details",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RCRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rc_number", models.CharField(blank=True, max_length=30, null=True)),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                ("endpoint", models.CharField(max_length=200)),
                ("status_code", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("fail", "Fail")],
                        max_length=10,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_payload", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "rc_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="kyc_api_gateway.rcdetails",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "rc_request_log",
                "ordering": ["-created_at"],
            },
        ),
    ]
