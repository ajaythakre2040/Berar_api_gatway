# Generated by Django 5.2.6 on 2025-10-14 11:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("kyc_api_gateway", "0017_rename_pandetails_uatpandetails_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ProElectricityBill",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "consumer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "customer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "operator_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "service_provider",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("district", models.CharField(blank=True, max_length=100, null=True)),
                ("full_name", models.CharField(blank=True, max_length=200, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                ("mobile", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "reg_mobile_no",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                (
                    "bill_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "bill_amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "bill_due_date",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "bill_issue_date",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("bill_status", models.CharField(blank=True, max_length=50, null=True)),
                ("document_link", models.TextField(blank=True, null=True)),
                ("full_response", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
            ],
            options={
                "db_table": "pro_bill_details",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProNameMatch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("client_id", models.CharField(blank=True, max_length=100, null=True)),
                ("request_id", models.CharField(blank=True, max_length=100, null=True)),
                ("name_1", models.CharField(blank=True, max_length=200, null=True)),
                ("name_2", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "match_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=6, null=True
                    ),
                ),
                ("match_status", models.BooleanField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "pro_name_match",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProPanDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.CharField(blank=True, max_length=100, null=True)),
                ("client_id", models.CharField(blank=True, max_length=100, null=True)),
                ("pan_number", models.CharField(db_index=True, max_length=20)),
                ("full_name", models.CharField(blank=True, max_length=255, null=True)),
                ("first_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("last_name", models.CharField(blank=True, max_length=100, null=True)),
                ("aadhaar_linked", models.BooleanField(null=True)),
                (
                    "masked_aadhaar",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("aadhaar_match", models.BooleanField(null=True)),
                ("dob", models.DateField(blank=True, null=True)),
                ("dob_verified", models.BooleanField(null=True)),
                ("dob_check", models.BooleanField(null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("email", models.EmailField(blank=True, max_length=254, null=True)),
                ("pan_status", models.CharField(blank=True, max_length=50, null=True)),
                ("is_salaried", models.BooleanField(null=True)),
                ("is_director", models.BooleanField(null=True)),
                ("is_sole_prop", models.BooleanField(null=True)),
                ("issue_date", models.DateField(blank=True, null=True)),
                ("category", models.CharField(blank=True, max_length=50, null=True)),
                ("less_info", models.BooleanField(null=True)),
                ("profile_match", models.JSONField(blank=True, null=True)),
                (
                    "address_line_1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "address_line_2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "street_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("pin_code", models.CharField(blank=True, max_length=10, null=True)),
                ("country", models.CharField(default="INDIA", max_length=100)),
                ("full_address", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
            ],
            options={
                "db_table": "pro_pan_details",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProRcDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.CharField(blank=True, max_length=100, null=True)),
                ("client_id", models.CharField(blank=True, max_length=100, null=True)),
                ("rc_number", models.CharField(db_index=True, max_length=30)),
                ("owner_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "father_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("present_address", models.TextField(blank=True, null=True)),
                ("permanent_address", models.TextField(blank=True, null=True)),
                (
                    "mobile_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "maker_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "maker_model",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("body_type", models.CharField(blank=True, max_length=100, null=True)),
                ("fuel_type", models.CharField(blank=True, max_length=100, null=True)),
                ("color", models.CharField(blank=True, max_length=50, null=True)),
                ("norms_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vehicle_category",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicle_category_description",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "vehicle_chasi_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "vehicle_engine_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "manufacturing_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "manufacturing_date_formatted",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "registration_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "registered_at",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "insurance_company",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "insurance_policy_number",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "insurance_upto",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("fit_upto", models.CharField(blank=True, max_length=20, null=True)),
                ("tax_upto", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "cubic_capacity",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "vehicle_gross_weight",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "unladen_weight",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "seat_capacity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "sleeper_capacity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "standing_capacity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("wheelbase", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "no_cylinders",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("financer", models.CharField(blank=True, max_length=255, null=True)),
                ("financed", models.BooleanField(null=True)),
                ("rc_status", models.CharField(blank=True, max_length=50, null=True)),
                ("latest_by", models.CharField(blank=True, max_length=50, null=True)),
                ("less_info", models.BooleanField(null=True)),
                ("full_response", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "pro_rc_details",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProVoterDetail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "vendor",
                    models.CharField(
                        choices=[("karza", "Karza"), ("surepass", "Surepass")],
                        max_length=50,
                    ),
                ),
                ("client_id", models.CharField(blank=True, max_length=100, null=True)),
                ("epic_no", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "input_voter_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "relation_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "relation_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("dob", models.CharField(blank=True, max_length=20, null=True)),
                ("age", models.CharField(blank=True, max_length=5, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("district", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "assembly_constituency",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "assembly_constituency_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "polling_station",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("part_no", models.CharField(blank=True, max_length=10, null=True)),
                ("part_name", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "slno_in_part",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("ps_lat_long", models.CharField(blank=True, max_length=50, null=True)),
                ("name_v1", models.CharField(blank=True, max_length=255, null=True)),
                ("name_v2", models.CharField(blank=True, max_length=255, null=True)),
                ("name_v3", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "rln_name_v1",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "rln_name_v2",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "rln_name_v3",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("ps_name", models.CharField(blank=True, max_length=255, null=True)),
                ("house_no", models.CharField(blank=True, max_length=50, null=True)),
                ("last_update", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "parliamentary_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "parliamentary_number",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("st_code", models.CharField(blank=True, max_length=20, null=True)),
                ("voter_id", models.CharField(blank=True, max_length=100, null=True)),
                ("created_by", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "pro_voter_detail",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AlterModelOptions(
            name="vendormanagement",
            options={},
        ),
        migrations.RemoveField(
            model_name="vendormanagement",
            name="priority",
        ),
        migrations.AddField(
            model_name="kycclientservicesmanagement",
            name="day",
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name="uatbillrequestlog",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="uatbillrequestlog",
            name="user_agent",
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name="uatnamematchrequestlog",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="uatnamematchrequestlog",
            name="user_agent",
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name="uatpanrequestlog",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="uatpanrequestlog",
            name="user_agent",
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name="uatrcrequestlog",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="uatrcrequestlog",
            name="user_agent",
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.AddField(
            model_name="uatvoterrequestlog",
            name="ip_address",
            field=models.GenericIPAddressField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="uatvoterrequestlog",
            name="user_agent",
            field=models.CharField(blank=True, max_length=512, null=True),
        ),
        migrations.CreateModel(
            name="KycVendorPriority",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("priority", models.IntegerField(default=0)),
                ("created_by", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_by", models.IntegerField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(blank=True, null=True)),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_priorities",
                        to="kyc_api_gateway.clientmanagement",
                    ),
                ),
                (
                    "my_service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_service_priorities",
                        to="kyc_api_gateway.kycmyservices",
                    ),
                ),
                (
                    "vendor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vendor_priority_entries",
                        to="kyc_api_gateway.vendormanagement",
                    ),
                ),
            ],
            options={
                "db_table": "kyc_vendor_priority",
                "ordering": ["priority"],
            },
        ),
        migrations.CreateModel(
            name="ProBillRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "customer_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "operator_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("vendor", models.CharField(blank=True, max_length=100, null=True)),
                ("endpoint", models.CharField(blank=True, max_length=255, null=True)),
                ("status_code", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("fail", "Fail")],
                        max_length=10,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_payload", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=512, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "bill_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bill_logs",
                        to="kyc_api_gateway.proelectricitybill",
                    ),
                ),
            ],
            options={
                "db_table": "pro_bill_request_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProNameMatchRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.CharField(blank=True, max_length=100, null=True)),
                ("name_1", models.CharField(blank=True, max_length=200, null=True)),
                ("name_2", models.CharField(blank=True, max_length=200, null=True)),
                ("vendor", models.CharField(blank=True, max_length=100, null=True)),
                ("endpoint", models.CharField(blank=True, max_length=255, null=True)),
                ("status_code", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("fail", "Fail")],
                        max_length=10,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_payload", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=512, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "name_match",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="name_match_logs",
                        to="kyc_api_gateway.pronamematch",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pro_name_match_request_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProPanRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pan_number", models.CharField(blank=True, max_length=20, null=True)),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                ("endpoint", models.CharField(max_length=200)),
                ("status_code", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("fail", "Fail")],
                        max_length=10,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_payload", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=512, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "pan_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="kyc_api_gateway.propandetails",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pro_pan_request_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProRcRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rc_number", models.CharField(blank=True, max_length=30, null=True)),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                ("endpoint", models.CharField(max_length=200)),
                ("status_code", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("fail", "Fail")],
                        max_length=10,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_payload", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=512, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "rc_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="kyc_api_gateway.prorcdetails",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "pro_rc_request_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProVoterRequestLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vendor", models.CharField(blank=True, max_length=50, null=True)),
                ("endpoint", models.CharField(blank=True, max_length=255, null=True)),
                ("status_code", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "Success"), ("fail", "Fail")],
                        max_length=10,
                    ),
                ),
                ("request_payload", models.JSONField(blank=True, null=True)),
                ("response_payload", models.JSONField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=512, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "voter_detail",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="bill_logs",
                        to="kyc_api_gateway.provoterdetail",
                    ),
                ),
            ],
            options={
                "db_table": "pro_voter_request_log",
                "ordering": ["-created_at"],
            },
        ),
    ]
